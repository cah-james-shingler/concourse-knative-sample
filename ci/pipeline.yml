---
resources:
- name: knative-test
  type: git
  check_every: 10s
  source: {uri: "https://github.com/ddadlani/knative-test"}
- name: helloworld-go
  type: git
  check_every: 10s
  source: {uri: "https://github.com/ddadlani/helloworld-go"}
- name: kubectl
  type: docker-image
  source: {repository: ddadlani/kubectl}

jobs:
- name: unit
  plan:
  - get: knative-test
    trigger: true
  - get: helloworld-go
    trigger: true
  - task: test-unit
    file: knative-test/ci/tasks/test-unit.yml

- name: knative-unit
  plan:
  - get: knative-test
    trigger: true
  - get: kubectl
  - task: knative-unit-test
    file: knative-test/ci/tasks/run-build.yml
    image: kubectl
    params:
      CONFIG: ((key))
      CLUSTER_NAME: ((cluster))
      PROJECT_NAME: ((project))
      ZONE: ((zone))
      BUILD_NAME: go-unit-test
  - task: delete-build
    image: kubectl
    file: knative-test/ci/tasks/delete-build.yml
    params:
      CONFIG: ((key))
      CLUSTER_NAME: ((cluster))
      PROJECT_NAME: ((project))
      ZONE: ((zone))
      BUILD_NAME: go-unit-test

- name: build-image
  serial: true
  plan:
  - get: knative-test
    trigger: true
    passed: [unit, knative-unit]
  - get: helloworld-go
    passed: [unit]
    trigger: true
  - get: kubectl
  - task: build-image
    image: kubectl
    file: knative-test/ci/tasks/run-build.yml
    params:
      CONFIG: ((key))
      CLUSTER_NAME: ((cluster))
      PROJECT_NAME: ((project))
      ZONE: ((zone))
      BUILD_NAME: kaniko-build
    input_mapping:
      app: helloworld-go
    timeout: 10m
  - task: delete-build
    image: kubectl
    file: knative-test/ci/tasks/delete-build.yml
    params:
      CONFIG: ((key))
      CLUSTER_NAME: ((cluster))
      PROJECT_NAME: ((project))
      ZONE: ((zone))
      BUILD_NAME: kaniko-build

- name: serve
  serial: true
  plan:
  - get: knative-test
    passed: [build-image]
    trigger: true
  - get: helloworld-go
    passed: [build-image]
    trigger: true
  - get: kubectl
  - task: serve-hello
    file: knative-test/ci/tasks/serve.yml
    params:
      CONFIG: ((key))
      CLUSTER_NAME: ((cluster))
      PROJECT_NAME: ((project))
      ZONE: ((zone))
